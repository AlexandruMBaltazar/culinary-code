import org.gradle.api.publish.maven.MavenPublication
import org.gradle.api.tasks.compile.GroovyCompile
import org.gradle.api.tasks.compile.JavaCompile
import org.gradle.jvm.toolchain.JavaLanguageVersion

plugins {
    id "com.diffplug.spotless" version "6.8.0"
    id 'io.spring.dependency-management' version '1.1.3'
    id 'org.springframework.boot' version '3.1.5' apply false
}

ext.versions = [
        springBoot        : '3.1.5',
        springCloudVersion: '2022.0.3',
        springCloud       : '2022.0.3',
]

apply from: 'version.gradle'
def getProjectVersion = loadVersion().getVersionForProject()

spotless {
    java {
        ratchetFrom 'origin/main'
        target '**/src/**/java/**/*.java'
        toggleOffOn('@formatter:off', '@formatter:on')
        removeUnusedImports()
        importOrderFile('format/fanduel-import-order-eclipse.importorder')
        eclipse().configFile('format/fanduel-format-style-eclipse.xml')
        trimTrailingWhitespace()
        custom 'noWildcardImports', {
            if (it.contains('*;\n')) {
                throw new AssertionError('No wildcard imports allowed')
            }
        } as Closure<String>
    }
}

repositories {
    mavenLocal()
    mavenCentral()
    maven { url "https://repo.spring.io/snapshot" }
    maven { url "https://repo.spring.io/milestone" }
}

allprojects {
    apply plugin: 'io.spring.dependency-management'
    group 'com.culinarycode'
    version = getProjectVersion

    dependencyManagement {
        imports {
            mavenBom("org.springframework.boot:spring-boot-dependencies:${versions.springBoot}")
            mavenBom("org.springframework.cloud:spring-cloud-dependencies:${versions.springCloud}")
        }
    }
}

subprojects {
    apply plugin: 'java'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: "com.diffplug.spotless"

    dependencies {
        compileOnly 'org.projectlombok:lombok'
        annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
        annotationProcessor 'org.projectlombok:lombok'
        testImplementation 'org.springframework.boot:spring-boot-starter-test'
    }

    java {
        toolchain {
            languageVersion = JavaLanguageVersion.of(17)
        }
        withSourcesJar()
    }

    afterEvaluate {
        def spotless = tasks.findByName('spotlessApply')
        if (spotless) {
            tasks.withType(JavaCompile) {
                finalizedBy(spotless)
            }

            tasks.withType(GroovyCompile) {
                finalizedBy(spotless)
            }
        }
    }

    test {
        useJUnitPlatform()
    }

    repositories {
        mavenLocal()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
    }

    //Upload/publish artifiacts
    publishing {
        publications {
            mavenJava(MavenPublication) {
                // jar is the default build task configured by Spring Boot if bootJar=false
                from components.java
                versionMapping {
                    usage('java-api') {
                        fromResolutionOf('runtimeClasspath')
                    }
                    usage('java-runtime') {
                        fromResolutionResult()
                    }
                }
            }
        }
    }
}
